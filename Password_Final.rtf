{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb3\cf13 #include<stdio.h>
\par #include<stdlib.h>
\par #include<string.h>
\par 
\par \cb3\cf11\b struct \b0\cb1\cf0 timetable
\par \cb3\cf22 \{ \cb3\cf11\b char \b0\cb1\cf0 sub\cb3\cf22 [\cb3\cf9 50\cb3\cf22 ];
\par   \cb3\cf11\b char \b0\cb1\cf0 pass\cb3\cf22 [\cb3\cf9 50\cb3\cf22 ];
\par   \cb3\cf11\b char \b0\cb1\cf0 username\cb3\cf22 [\cb3\cf9 50\cb3\cf22 ]
\par \} \cb1\cf0 t1\cb3\cf22 ;
\par \cb3\cf11\b char \b0\cb1\cf0 fname\cb3\cf22 []=\{\cb3\cf17 "USERNAME_PASSWORD.dat"\cb3\cf22 \};
\par \cb3\cf11\b void \b0\cb1\cf0 append\cb3\cf22 ();
\par \cb3\cf11\b void \b0\cb1\cf0 display\cb3\cf22 ();
\par \cb3\cf11\b void \b0\cb1\cf0 disp_all\cb3\cf22 ();
\par \cb3\cf11\b void \b0\cb1\cf0 del\cb3\cf22 ();
\par \cb3\cf11\b void \b0\cb1\cf0 mod\cb3\cf22 ();
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()
\par \{ \cb3\cf11\b char \b0\cb1\cf0 Access\cb3\cf22 [\cb3\cf9 10\cb3\cf22 ];
\par   \cb3\cf11\b int \b0\cb1\cf0 want\cb3\cf22 =\cb3\cf9 1\cb3\cf22 ;
\par  \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 want\cb3\cf22 )
\par \{\cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "ENTER THE ENTRY CODE:\\n"\cb3\cf22 );
\par   \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%s"\cb3\cf22 ,\cb1\cf0 Access\cb3\cf22 );
\par   \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 strcmp\cb3\cf22 (\cb1\cf0 Access\cb3\cf22 ,\cb3\cf17 "9393"\cb3\cf22 )==\cb3\cf9 0\cb3\cf22 )
\par    \{  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "ACCESS GRANDED"\cb3\cf22 );
\par       \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"\cb3\cf22 );
\par       \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                                                                      ___           ____     ___     _    _     ___      \\n"\cb3\cf22 );
\par       \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                                                            |    |   |       |     |        |   |   | \\\\  / |   |        \\n"\cb3\cf22 );
\par       \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                                                            | /\\\\ |   |---    |     |        |   |   |  \\\\/  |   |---    \\n"\cb3\cf22 );
\par       \cb1\cf0 printf("                                                                            |/  \\\\|   |___    |___  |____    |___|   |      |   |___     \\n");
\par       printf("\\n");
\par 
\par     int ch;
\par while(1)
\par \{
\par printf("\\n\\n\\n\\n");
\par printf(" ========================: MENU :==========================\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                KEY       |     OPTION                  \\"\\n");
\par printf(" \\"--------------------------|-----------------------------\\"\\n");
\par printf(" \\"                 1.       |      Insert Data            \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                 2.       |        Modify               \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                 3.       |        Delete               \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                 4.       |  Display Account Details:   \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                 5.       |  Display Entire Data:       \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"                 0.       |         Exit                \\"\\n");
\par printf(" \\"                          |                             \\"\\n");
\par printf(" \\"=========================+=+============================\\"\\n\\n");
\par 
\par printf("\\n Please enter your Choice:");
\par scanf("%d",&ch);
\par 
\par switch(ch)
\par \{
\par case 1: append();
\par         break;
\par 
\par case 2: modify();
\par         break;
\par 
\par case 3: del();
\par         break;
\par 
\par 
\par case 4: display();
\par         break;
\par 
\par case 5: display_all();
\par break;
\par 
\par case 0:
\par         printf("\\n\\n=================== : SIGNED OUT : ====================== ");
\par         printf("\\n\\n\\n");
\par         exit(0);
\par \}
\par 
\par \}
\par    \}
\par else
\par \{ printf("ACCESS DENIED:\\n");
\par     printf("WANT TO RE-ENTER PASSWORD? (0,1)");
\par     scanf("%d",&want);
\par    \}
\par \}
\par return 0;
\par \}
\par 
\par void append()
\par \{
\par  FILE *fp;
\par  fp=fopen(fname,"ab");
\par 
\par  printf("ENTER THE PLATFORM: ");
\par  scanf("%s",t1.sub);
\par  printf("\\n");
\par  printf("ENTER THE USERNAME: ");
\par  scanf("%s",t1.username);
\par  printf("\\n");
\par  printf("ENTER PASSWORD: ");
\par  scanf("%s",t1.pass);
\par  fwrite(&t1,sizeof(t1),1,fp);
\par  fclose(fp);
\par \}
\par 
\par void display()
\par \{ FILE *fp;
\par   struct timetable t1;
\par   int choice=1;
\par   int found=0;
\par   char str_sub[10];
\par   while(choice)
\par   \{ fp=fopen(fname,"rb");
\par     printf("ENTER THE PLATFORM: ");
\par     scanf("%s",str_sub);
\par     while(1)
\par     \{ fread(&t1,sizeof(t1),1,fp);
\par       if(feof(fp))
\par       \{ break;
\par       \}
\par       if(strcmpi(t1.sub,str_sub)==0)
\par       \{   found=1;
\par           printf("\\n\\n================ ACCOUNT DETAILS ==================\\n\\n\\n");
\par           printf("SITE:     ");
\par           printf("%s",t1.sub);
\par           printf("\\n");
\par           printf("EMAIL_ID: ");
\par           printf("%s",t1.username);
\par           printf("\\n");
\par           printf("PASSWORD: ");
\par           printf("%s",t1.pass);
\par           printf("\\n");
\par           fclose(fp);
\par           break;
\par       \}
\par     \}
\par     if(found==0)
\par     \{ printf("======================SORRY,NO SUCH RECORD:==================\\n\\n");
\par         fclose(fp);
\par     \}
\par     printf("\\n");
\par     printf("WANT TO CONTINUE DISPLAYING DATA?(0,1)\\n");
\par    scanf("%d",&choice);
\par    if(choice==0)
\par    \{return;
\par    \}
\par   \}
\par \}
\par 
\par void modify()
\par \{ FILE *fp,*fp1;
\par    struct timetable t;
\par   int found=0;
\par   fp=fopen(fname,"rb");
\par   fp1=fopen("TEMP_ACCOUNT.dat","wb");
\par   char search[20];
\par   printf("\\nENTER THE DATA TO BE MODIFIED: ");
\par   scanf("%s",search);
\par   while(1)
\par   \{ fread(&t,sizeof(t),1,fp);
\par     if(feof(fp))
\par     \{ fclose(fp);
\par       fclose(fp1);
\par       break;
\par 
\par     \}
\par     if(strcmp(t.sub,search)==0)
\par     \{found=1;
\par      printf("ENTER THE PLATFORM: ");
\par      scanf("%s",t.sub);
\par      printf("\\n");
\par      printf("ENTER THE USERNAME: ");
\par      scanf("%s",&t.username);
\par      printf("\\n");
\par      printf("ENTER THE PASSWWORD: ");
\par      scanf("%s",&t.pass);
\par      fwrite(&t,sizeof(t),1,fp1);
\par 
\par     \}
\par     else
\par     \{ fwrite(&t,sizeof(t),1,fp1);
\par 
\par     \}
\par   \}
\par     if(found==0)
\par     \{ printf("===================SORRY,NO RECORDS TO DISPLAY=================");
\par 
\par     \}
\par     else
\par     \{ fp=fopen(fname,"wb");
\par       fp1=fopen("TEMP_ACCOUNT.dat","rb");
\par       while(1)
\par       \{ fread(&t,sizeof(t),1,fp1);
\par 
\par          if(feof(fp1))
\par          \{fclose(fp);
\par           fclose(fp1);
\par           break;
\par          \}
\par 
\par         fwrite(&t,sizeof(t),1,fp);
\par 
\par       \}
\par 
\par     \}
\par 
\par \}
\par 
\par 
\par void display_all()
\par \{ FILE *fp;
\par   struct timetable t;
\par 
\par   fp=fopen(fname,"rb");
\par   printf("\\n");
\par   printf("      ========== :ENTIRE ACCOUNT DETAILS: ==========\\n\\n");
\par   printf("\\n     \\SITE\\t\\t|\\tUSERNAME\\t|\\tPASSWORD\\t\\t\\n");
\par   printf("------------------------------------------------------------\\n");
\par   while(1)
\par   \{ fread(&t,sizeof(t),1,fp);
\par     if(feof(fp))
\par     \{fclose(fp);
\par      break;\}
\par 
\par     printf("%s\\t\\t",t.sub);
\par     printf("%s\\t\\t",t.username);
\par     printf("%s\\t\\t",t.pass);
\par     printf("\\n\\n");
\par 
\par   \}
\par 
\par \}
\par void del()
\par \{ FILE *fp,*fp1;
\par    struct timetable t;
\par   int found=0;
\par   fp=fopen(fname,"rb");
\par   fp1=fopen("TEMP_ACCOUNT.dat","wb");
\par   char search[20];
\par   printf("\\nENTER THE DATA TO BE DELETED FROM RECORD: ");
\par   scanf("%s",search);
\par   while(1)
\par   \{ fread(&t,sizeof(t),1,fp);
\par     if(feof(fp))
\par     \{ fclose(fp);
\par       fclose(fp1);
\par       break;
\par 
\par     \}
\par     if(strcmp(t.sub,search)!=0)
\par     \{found=1;
\par      fwrite(&t,sizeof(t),1,fp1);
\par     \}
\par   \}
\par     if(found==0)
\par     \{ printf("=================== :SORRY,NO SUCH RECORD :===================\\n");
\par 
\par     \}
\par     else
\par     \{ fp=fopen(fname,"wb");
\par       fp1=fopen("TEMP_ACCOUNT.dat","rb");
\par       while(1)
\par       \{ fread(&t,sizeof(t),1,fp1);
\par 
\par          if(feof(fp1))
\par          \{fclose(fp);
\par           fclose(fp1);
\par           break;
\par          \}
\par 
\par         fwrite(&t,sizeof(t),1,fp);
\par 
\par       \}
\par 
\par     \}
\par 
\par \}
\par 
\par }